## -*- encoding: utf-8 -*-
# This file was *autogenerated* from the file chap4.sagetex.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_185 = Integer(185); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_43 = Integer(43); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_243 = Integer(243); _sage_const_182 = Integer(182); _sage_const_267 = Integer(267); _sage_const_1p5 = RealNumber('1.5'); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_523 = Integer(523); _sage_const_22 = Integer(22); _sage_const_23 = Integer(23); _sage_const_20 = Integer(20); _sage_const_21 = Integer(21); _sage_const_26 = Integer(26); _sage_const_27 = Integer(27); _sage_const_24 = Integer(24); _sage_const_6 = Integer(6); _sage_const_40 = Integer(40); _sage_const_394 = Integer(394); _sage_const_38 = Integer(38); _sage_const_32 = Integer(32); _sage_const_44 = Integer(44); _sage_const_379 = Integer(379); _sage_const_48 = Integer(48); _sage_const_86 = Integer(86); _sage_const_518 = Integer(518); _sage_const_238 = Integer(238); _sage_const_33 = Integer(33); _sage_const_170 = Integer(170); _sage_const_173 = Integer(173); _sage_const_0p8 = RealNumber('0.8'); _sage_const_25 = Integer(25); _sage_const_409 = Integer(409); _sage_const_39 = Integer(39); _sage_const_105 = Integer(105); _sage_const_192 = Integer(192); _sage_const_262 = Integer(262); _sage_const_214 = Integer(214); _sage_const_45 = Integer(45); _sage_const_270 = Integer(270); _sage_const_41 = Integer(41); _sage_const_218 = Integer(218); _sage_const_526 = Integer(526); _sage_const_354 = Integer(354); _sage_const_42 = Integer(42); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_16 = Integer(16); _sage_const_15 = Integer(15); _sage_const_14 = Integer(14); _sage_const_31 = Integer(31); _sage_const_30 = Integer(30); _sage_const_19 = Integer(19); _sage_const_18 = Integer(18); _sage_const_35 = Integer(35); _sage_const_34 = Integer(34); _sage_const_37 = Integer(37); _sage_const_50 = Integer(50); _sage_const_382 = Integer(382); _sage_const_36 = Integer(36); _sage_const_385 = Integer(385); _sage_const_93 = Integer(93); _sage_const_165 = Integer(165); _sage_const_96 = Integer(96); _sage_const_377 = Integer(377); _sage_const_415 = Integer(415); _sage_const_292 = Integer(292); _sage_const_520 = Integer(520)## This file (chap4.sagetex.sage) was *autogenerated* from chap4.tex with sagetex.sty version 2012/01/16 v2.3.3-69dcb0eb93de.
import sagetex
_st_ = sagetex.SageTeXProcessor('chap4', version='2012/01/16 v2.3.3-69dcb0eb93de', version_check=True)
_st_.blockbegin()
try:
  f=-x**_sage_const_2 *sin(x) + _sage_const_2 
  n=_sage_const_5 
  xk=[_sage_const_2 *i for i in range(n)]
  fxk=range(n)
  yk=[]
  for i in range(n):
    fxk[i]=N(f(x=xk[i]),_sage_const_20 )
    # Neu khong chuyen thanh so thuc bang N(.,20) thi fxk[i] la bieu thuc symbolic dai, dua vao tableVD1 se bao loi
    yk.append((xk[i],fxk[i]))
  # Dung lenh sau tao ra list nhanh hon
  # yk2=[(xk[i],fxk[i]) for i in range(n)]
  R = PolynomialRing(QQ, 'x')
  Lagrange_1 = R.lagrange_polynomial(yk)
  plotL1=plot(Lagrange_1, (-_sage_const_1 ),(_sage_const_9 ), color='red', legend_label='$P(x)$')
 
  plotfxk=list_plot(yk, size=_sage_const_50 , legend_label='($x_k$,$y_k$)')
  tableVD1=r"\begin{tabular}{l|c|l}"
  tableVD1+=r"$k$ & $x_k$ & $y_k$ \\ \hline"
  for i in range(n):
    tableVD1+=latex(i) + r"&" + latex(round(xk[i],_sage_const_2 )) + r"&" + latex(fxk[i]) + r"\\"
  tableVD1+=r"\end{tabular}"
except:
 _st_.goboom(_sage_const_86 )
_st_.blockend()
try:
 _st_.inline(_sage_const_0 , tableVD1)
except:
 _st_.goboom(_sage_const_93 )
try:
 _st_.plot(_sage_const_0 , format='notprovided', _p_=plotL1+plotfxk)
except:
 _st_.goboom(_sage_const_96 )
_st_.blockbegin()
try:
  n=_sage_const_3 
  xk2=[_sage_const_0 ,_sage_const_1 ,_sage_const_3 ]
  fxk2=[_sage_const_1 ,-_sage_const_1 ,_sage_const_2 ]
  #yk2=[(xk2[i],fxk2[i]) for i in range(n)]
  yk2=zip(xk2,fxk2) # zip: couple pairs of values of the two arrays
  R = PolynomialRing(QQ, 'x')
  Lagrange_2 = R.lagrange_polynomial(yk2)
  plotL2=plot(Lagrange_2, (-_sage_const_1 ),(_sage_const_4 ), color='red', legend_label='$\mathcal{L}_2(x)$')
  # Ref: http://www.sagemath.org/doc/reference/polynomial_rings/sage/rings/polynomial/polynomial_ring.html
  #Lagrange_2=7/6*x^2-19/6*x+1
  #plotL2=plot(Lagrange_2, (-1,4), color='red', legend_label='$\mathcal{L}_2(x)$')
  #plotfxk2=list_plot(yk2, size=50, legend_label='($x_k$,$y_k$)')
  plotfxk2=list_plot(yk2, size=_sage_const_50 )
  tableVD2=r"\begin{tabular}{l|c|l}"
  tableVD2+=r"$k$ & $x_k$ & $y_k$ \\ \hline"
  for i in range(n):
    tableVD2+=latex(i) + r"&" + latex(round(xk2[i],_sage_const_2 )) + r"&" + latex(fxk2[i]) + r"\\"
  tableVD2+=r"\end{tabular}"
except:
 _st_.goboom(_sage_const_165 )
_st_.blockend()
try:
 _st_.inline(_sage_const_1 , tableVD2)
except:
 _st_.goboom(_sage_const_170 )
try:
 _st_.plot(_sage_const_1 , format='notprovided', _p_=plotfxk2)
except:
 _st_.goboom(_sage_const_173 )
try:
 _st_.inline(_sage_const_2 , tableVD2)
except:
 _st_.goboom(_sage_const_182 )
try:
 _st_.plot(_sage_const_2 , format='notprovided', _p_=plotfxk2+plotL2)
except:
 _st_.goboom(_sage_const_185 )
try:
 _st_.inline(_sage_const_3 , tableVD2)
except:
 _st_.goboom(_sage_const_214 )
_st_.blockbegin()
try:
 xp=_sage_const_2 
except:
 _st_.goboom(_sage_const_218 )
_st_.blockend()
try:
 _st_.inline(_sage_const_4 , tableVD2)
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_5 , latex(xp))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_6 , latex(xk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_7 , latex(xk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_8 , latex(xk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_9 , latex(xk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_10 , latex(xp-xk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_11 , latex(xk2[_sage_const_0 ]-xk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_12 , latex(xk2[_sage_const_0 ]-xk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_13 , latex((xp-xk2[_sage_const_0 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_1 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_14 , latex(xk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_15 , latex(xk2[_sage_const_1 ]-xk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_16 , latex(xp-xk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_17 , latex(xk2[_sage_const_1 ]-xk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_18 , latex((xk2[_sage_const_1 ]-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xk2[_sage_const_1 ]-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_19 , latex(xk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_20 , latex(xk2[_sage_const_2 ]-xk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_21 , latex(xk2[_sage_const_2 ]-xk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_22 , latex(xp-xk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_23 , latex((xk2[_sage_const_2 ]-xk2[_sage_const_0 ])*(xk2[_sage_const_2 ]-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_24 , latex((xp-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_238 )
try:
 _st_.inline(_sage_const_25 , latex((xp-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_26 , latex(fxk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_27 , latex((xp-xk2[_sage_const_0 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_1 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_28 , latex(fxk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_29 , latex((xk2[_sage_const_1 ]-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xk2[_sage_const_1 ]-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_30 , latex(fxk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_31 , latex((xk2[_sage_const_2 ]-xk2[_sage_const_0 ])*(xk2[_sage_const_2 ]-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_32 , latex((xp-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])*(fxk2[_sage_const_0 ]/((xp-xk2[_sage_const_0 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_1 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_2 ])) + fxk2[_sage_const_1 ]/((xk2[_sage_const_1 ]-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xk2[_sage_const_1 ]-xk2[_sage_const_2 ])) + fxk2[_sage_const_2 ]/((xk2[_sage_const_2 ]-xk2[_sage_const_0 ])*(xk2[_sage_const_2 ]-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_25 , latex((xp-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_26 , latex(fxk2[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_27 , latex((xp-xk2[_sage_const_0 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_1 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_28 , latex(fxk2[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_29 , latex((xk2[_sage_const_1 ]-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xk2[_sage_const_1 ]-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_30 , latex(fxk2[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_31 , latex((xk2[_sage_const_2 ]-xk2[_sage_const_0 ])*(xk2[_sage_const_2 ]-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))
except:
 _st_.goboom(_sage_const_243 )
try:
 _st_.inline(_sage_const_32 , latex((xp-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])*(fxk2[_sage_const_0 ]/((xp-xk2[_sage_const_0 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_1 ])*(xk2[_sage_const_0 ]-xk2[_sage_const_2 ])) + fxk2[_sage_const_1 ]/((xk2[_sage_const_1 ]-xk2[_sage_const_0 ])*(xp-xk2[_sage_const_1 ])*(xk2[_sage_const_1 ]-xk2[_sage_const_2 ])) + fxk2[_sage_const_2 ]/((xk2[_sage_const_2 ]-xk2[_sage_const_0 ])*(xk2[_sage_const_2 ]-xk2[_sage_const_1 ])*(xp-xk2[_sage_const_2 ])))))
except:
 _st_.goboom(_sage_const_243 )
_st_.blockbegin()
try:
  n=_sage_const_4 
  xk3=[_sage_const_0 ,_sage_const_1 ,_sage_const_3 ,_sage_const_4 ]
  fxk3=[_sage_const_1 ,_sage_const_1 ,_sage_const_2 ,-_sage_const_1 ]
 # yk3=[(xk3[i],fxk3[i]) for i in range(n)]
  yk3=zip(xk3,fxk3) # zip: couple pairs of values of the two arrays
  R = PolynomialRing(QQ, 'x')
  Lagrange_3 = R.lagrange_polynomial(yk3)
  plotL3=plot(Lagrange_3, (-_sage_const_1 ),(_sage_const_5 ), color='red', legend_label='$\mathcal{L}_3(x)$')
  plotfxk3=list_plot(yk3, size=_sage_const_50 , legend_label='($x_k$,$y_k$)')
  tableVD3=r"\begin{tabular}{l|c|l}"
  tableVD3+=r"$k$ & $x_k$ & $y_k$ \\ \hline"
  for i in range(n):
    tableVD3+=latex(i) + r"&" + latex(round(xk3[i],_sage_const_2 )) + r"&" + latex(fxk3[i]) + r"\\"
  tableVD3+=r"\end{tabular}"
except:
 _st_.goboom(_sage_const_262 )
_st_.blockend()
try:
 _st_.inline(_sage_const_33 , tableVD3)
except:
 _st_.goboom(_sage_const_267 )
try:
 _st_.plot(_sage_const_3 , format='notprovided', _p_=plotfxk3+plotL3)
except:
 _st_.goboom(_sage_const_270 )
try:
 _st_.inline(_sage_const_34 , latex(Lagrange_3))
except:
 _st_.goboom(_sage_const_292 )
_st_.blockbegin()
try:
  xp=_sage_const_1p5 
  n=_sage_const_6 
  xk4=[_sage_const_1 ,_sage_const_2 ,_sage_const_3 ,_sage_const_4 ,_sage_const_5 ,_sage_const_6 ]
  fxk4=[-_sage_const_3 ,_sage_const_0 ,_sage_const_15 ,_sage_const_48 ,_sage_const_105 ,_sage_const_192 ]
  #[(1, -3), (2, 0), (3, 15), (4, 48), (5, 105), (6, 192)]
  yk4=zip(xk4,fxk4) # zip: couple pairs of values of the two arrays
  R = PolynomialRing(RR, "x")
  bangNewton = R.divided_difference(yk4, full_table=True)
  Lagrange_4 = R.lagrange_polynomial(yk4)
  plotL4=plot(Lagrange_4, (-_sage_const_1 ),(_sage_const_7 ), color='red', legend_label='$\mathcal{L}_5(x)$')
  plotfxk4=list_plot(yk4, size=_sage_const_50 , legend_label='($x_k$,$y_k$)')
  tableVD4=r"\begin{tabular}{l|c|l}"
  tableVD4+=r"$k$ & $x_k$ & $y_k$ \\ \hline"
  for i in range(n):
    tableVD4+=latex(i) + r"&" + latex(round(xk4[i],_sage_const_2 )) + r"&" + latex(fxk4[i]) + r"\\"
  tableVD4+=r"\end{tabular}"
except:
 _st_.goboom(_sage_const_354 )
_st_.blockend()
_st_.blockbegin()
try:
 # Now change the full table from Sagemath to my form of representing table
  bang2=list(list(i for i in range(j,n)) for j in range(n))
  for j in range(n):
     for i in range(j,n):
         bang2[j][i-j]=bangNewton[i][j]
 # Now create the Latex table
  tableNewton=r'\begin{tabular}{l|c|' # first column: k, second column: x_k
  for i in range(n): tableNewton+='c' # n columns for finit difference order 0 to n
  tableNewton+=r'}'
  tableNewton+=r'$k$ & $x_k$ & $y_k$'
 # for i in range(n-1): tableNewton+=r' & f[$x_0,\cdots,x_'+str(i+1)+r'$]'
  for i in range(_sage_const_1 ,n): tableNewton+=r' & $f_\Delta^'+str(i)+r'$'
  tableNewton+=r'\\ \hline'
  for i in range(n):
    tableNewton+=latex(i) + r' & ' + latex(round(xk4[i],_sage_const_2 ))
    for j in range(i+_sage_const_1 ):
      tableNewton+= r' & ' + latex(round(bangNewton[i][j],_sage_const_2 ))
    for j in range(i+_sage_const_1 ,n): tableNewton+= r' & '
    tableNewton+= r'\\'
  tableNewton+=r'\end{tabular}'
except:
 _st_.goboom(_sage_const_377 )
_st_.blockend()
try:
 _st_.inline(_sage_const_35 , latex(round(xp,_sage_const_2 )))
except:
 _st_.goboom(_sage_const_379 )
try:
 _st_.inline(_sage_const_36 , tableVD4)
except:
 _st_.goboom(_sage_const_382 )
try:
 _st_.plot(_sage_const_4 , format='notprovided', _p_=plotfxk4+plotL4)
except:
 _st_.goboom(_sage_const_385 )
try:
 _st_.inline(_sage_const_37 , tableNewton)
except:
 _st_.goboom(_sage_const_394 )
_st_.blockbegin()
try:
  mathNewton = r' = '+latex(bangNewton[_sage_const_0 ][_sage_const_0 ])
  sohangNewton = [bangNewton[i][i] for i in range(n)]
  for i in range(_sage_const_1 ,n):
    mathNewton+= r' + '+latex(bangNewton[i][i])
    for j in range(i):
      mathNewton+=r'('+latex(round(xp-xk4[j],_sage_const_2 ))+r')'
      sohangNewton[i] *= xp-xk4[j]
  ketquaNewton = sum(sohangNewton[i] for i in range(n))
except:
 _st_.goboom(_sage_const_409 )
_st_.blockend()
try:
 _st_.inline(_sage_const_38 , latex(round(xp,_sage_const_2 )))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_39 , latex(n))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_40 , latex(round(xp,_sage_const_2 )))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_41 , mathNewton)
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_42 , latex(round(ketquaNewton,_sage_const_3 )))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_38 , latex(round(xp,_sage_const_2 )))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_39 , latex(n))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_40 , latex(round(xp,_sage_const_2 )))
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_41 , mathNewton)
except:
 _st_.goboom(_sage_const_415 )
try:
 _st_.inline(_sage_const_42 , latex(round(ketquaNewton,_sage_const_3 )))
except:
 _st_.goboom(_sage_const_415 )
_st_.blockbegin()
try:
 a0=_sage_const_2 
 b0=_sage_const_0p8 
 n=_sage_const_10 
 xk=range(n)
 yk=[a0+b0*i+random() for i in range(n)]
 zk=zip(xk,yk)
 plotdata=list_plot(zk, size=_sage_const_50 , legend_label='($x_k$,$y_k$)')
 xk2=[xk[i]**_sage_const_2  for i in range(n)]
 matA=matrix([[n,sum(xk)],[sum(xk),sum(xk2)]])
 xkyk=[xk[i]*yk[i] for i in range(n)]
 matB=vector([sum(yk),sum(xkyk)])
 a,b=N(matA * BackslashOperator() * matB)
 plotline=plot(a+b*x,_sage_const_0 ,n, color='red', legend_label='($y=A+Bx$)')
 
 tableVD5=r"\begin{tabular}{l|c|l}"
 tableVD5+=r"$k$ & $x_k$ & $y_k$ \\ \hline"
 for i in range(n):
   tableVD5+=latex(i) + r"&" + latex(xk[i]) + r"&" + latex(round(yk[i],_sage_const_3 )) + r"\\"
 tableVD5+=r"\end{tabular}"
except:
 _st_.goboom(_sage_const_518 )
_st_.blockend()
try:
 _st_.inline(_sage_const_43 , latex(round(a,_sage_const_3 )))
except:
 _st_.goboom(_sage_const_520 )
try:
 _st_.inline(_sage_const_44 , latex(round(b,_sage_const_3 )))
except:
 _st_.goboom(_sage_const_520 )
try:
 _st_.inline(_sage_const_45 , tableVD5)
except:
 _st_.goboom(_sage_const_523 )
try:
 _st_.plot(_sage_const_5 , format='notprovided', _p_=plotdata+plotline)
except:
 _st_.goboom(_sage_const_526 )
_st_.endofdoc()
